<UserControl
    x:Class="R8LocoCtrl.Controls.DriverControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:R8LocoCtrl.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    d:DesignHeight="412.783"
    d:DesignWidth="170.421"
    DataContext="{StaticResource actionViewModel}"
    mc:Ignorable="d">
    <Grid>
        <WrapPanel>
            <StackPanel Orientation="Horizontal">
                <Label x:Name="reverserLabel" VerticalContentAlignment="Bottom">
                    <Image Source="pack://siteoforigin:,,,/icons/ReverserLabel.png" Stretch="None" />
                </Label>
                <local:ReverserSlider
                    Height="118"
                    Margin="0,4,0,4"
                    AutoToolTipPlacement="TopLeft"
                    Cursor="Hand"
                    IsEnabled="{Binding IsReverserEnabled}"
                    IsSnapToTickEnabled="True"
                    Maximum="2"
                    Orientation="Vertical"
                    SmallChange="1"
                    Style="{StaticResource SliderStyle}"
                    TickPlacement="BottomRight"
                    Value="{Binding ReverserPosition, Converter={StaticResource ReverserToDouble}}" />
            </StackPanel>
            <Label x:Name="throttleLabel" VerticalContentAlignment="Bottom">
                <Image
                    x:Name="image"
                    Source="pack://siteoforigin:,,,/icons/ThrottleLabel.png"
                    Stretch="None" />
            </Label>
            <Slider
                Height="118"
                Margin="0,4,0,4"
                AutoToolTipPlacement="TopLeft"
                AutomationProperties.LabeledBy="{Binding ElementName=throttleLabel, Mode=OneWay}"
                Cursor="Hand"
                IsEnabled="{Binding IsThrottleEnabled}"
                IsSnapToTickEnabled="True"
                LargeChange="1"
                Maximum="8"
                Orientation="Vertical"
                SmallChange="1"
                TickPlacement="BottomRight"
                Value="{Binding ThrottleValue}" />
            <StackPanel Orientation="Horizontal">
                <Label x:Name="dynBrakesLabel" VerticalContentAlignment="Bottom">
                    <Image Source="pack://siteoforigin:,,,/icons/DynamicBrakesLabel.png" Stretch="None" />
                </Label>
                <Slider
                    Height="118"
                    Margin="0,4,0,4"
                    AutoToolTipPlacement="TopLeft"
                    AutomationProperties.LabeledBy="{Binding ElementName=dynBrakesLabel, Mode=OneWay}"
                    Cursor="Hand"
                    IsEnabled="{Binding IsDynamicBrakesEnabled}"
                    LargeChange="{Binding DynBrakeLC}"
                    Maximum="255"
                    Orientation="Vertical"
                    SmallChange="1"
                    TickFrequency="32"
                    TickPlacement="BottomRight"
                    Value="{Binding DynamicBrakes}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label x:Name="trainBrakesLabel" VerticalContentAlignment="Bottom">
                    <Image Source="pack://siteoforigin:,,,/icons/TrainBrakesLabel.png" Stretch="None" />
                </Label>
                <Slider
                    Height="118"
                    Margin="0,4,0,4"
                    AutoToolTipPlacement="TopLeft"
                    AutomationProperties.LabeledBy="{Binding ElementName=trainBrakesLabel, Mode=OneWay}"
                    Cursor="Hand"
                    LargeChange="{Binding TrainBrakeLC}"
                    Maximum="255"
                    Orientation="Vertical"
                    SmallChange="1"
                    TickFrequency="32"
                    TickPlacement="BottomRight"
                    Value="{Binding TrainBrakes}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label x:Name="indyBrakesLabel" VerticalContentAlignment="Bottom">
                    <Image Source="pack://siteoforigin:,,,/icons/IndyBrakesLabel.png" Stretch="None" />
                </Label>
                <Slider
                    Height="118"
                    Margin="0,4,0,4"
                    AutoToolTipPlacement="TopLeft"
                    AutomationProperties.LabeledBy="{Binding ElementName=indyBrakesLabel, Mode=OneWay}"
                    Cursor="Hand"
                    LargeChange="{Binding IndyBrakeLC}"
                    Maximum="255"
                    Orientation="Vertical"
                    SmallChange="1"
                    TickFrequency="32"
                    TickPlacement="BottomRight"
                    Value="{Binding IndyBrakes}" />
            </StackPanel>
            <Button
                ClickMode="Press"
                Command="{Binding SendIndyBailOffCommand}"
                CommandParameter="{StaticResource True}"
                Content="Indy Bail Off">
                <b:Interaction.Triggers>
                    <b:DataTrigger Binding="{Binding IsPressed, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Value="false">
                        <b:InvokeCommandAction Command="{Binding SendIndyBailOffCommand}" CommandParameter="{StaticResource False}" />
                    </b:DataTrigger>
                </b:Interaction.Triggers>
            </Button>
            <Button
                ClickMode="Press"
                Command="{Binding SendSetParkingCommand}"
                CommandParameter="{StaticResource True}"
                Content="Set Parking">
                <b:Interaction.Triggers>
                    <b:DataTrigger Binding="{Binding IsPressed, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Value="false">
                        <b:InvokeCommandAction Command="{Binding SendSetParkingCommand}" CommandParameter="{StaticResource False}" />
                    </b:DataTrigger>
                </b:Interaction.Triggers>
            </Button>
            <Button
                ClickMode="Press"
                Command="{Binding SendReleaseParkingCommand}"
                CommandParameter="{StaticResource True}"
                Content="Release Parking">
                <b:Interaction.Triggers>
                    <b:DataTrigger Binding="{Binding IsPressed, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Value="false">
                        <b:InvokeCommandAction Command="{Binding SendReleaseParkingCommand}" CommandParameter="{StaticResource False}" />
                    </b:DataTrigger>
                </b:Interaction.Triggers>
            </Button>
            <Button
                ClickMode="Press"
                Command="{Binding SendSanderCommand}"
                CommandParameter="{StaticResource True}"
                Content="Sander">
                <b:Interaction.Triggers>
                    <b:DataTrigger Binding="{Binding IsPressed, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Value="false">
                        <b:InvokeCommandAction Command="{Binding SendSanderCommand}" CommandParameter="{StaticResource False}" />
                    </b:DataTrigger>
                </b:Interaction.Triggers>
            </Button>
            <Button
                ClickMode="Press"
                Command="{Binding SendEOTEmgStopCommand}"
                CommandParameter="{StaticResource True}"
                Content="EOT Emg Stop">
                <b:Interaction.Triggers>
                    <b:DataTrigger Binding="{Binding IsPressed, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Value="false">
                        <b:InvokeCommandAction Command="{Binding SendEOTEmgStopCommand}" CommandParameter="{StaticResource False}" />
                    </b:DataTrigger>
                </b:Interaction.Triggers>
            </Button>
        </WrapPanel>
    </Grid>
</UserControl>
